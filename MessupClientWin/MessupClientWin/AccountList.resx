<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>